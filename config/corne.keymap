/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <14 15>;
            layers = <0>;
        };

        Escape {
            bindings = <&kp ESC>;
            key-positions = <2 3>;
            layers = <0>;
        };
    };

    macros {
        Centrar: Centrar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT &kp LSHIFT &kp C_AC_HOME>;

            label = "CENTRAR";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LCTRL &kp LEFT_SHIFT &kp DELETE>;

            label = "CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Cole {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB       &kp Q           &kp W        &kp F         &kp P      &kp B        &kp J       &kp L            &kp U       &kp Y    &kp SEMICOLON  &kp ESC
&kp LSHFT     &kp A           &kp R        &kp S         &kp T      &kp G        &kp M       &kp N            &kp E       &kp I    &kp O          &kp MINUS
&kp LEFT_ALT  &mt LEFT_WIN Z  &mt LCTRL X  &kp C         &kp D      &kp V        &kp K       &kp H            &kp COMMA   &kp DOT  &kp FSLH       &mt RSHFT SLASH
                                           &kp LEFT_ALT  &lt 1 TAB  &kp SPACE    &kp RETURN  &lt 2 BACKSPACE  &kp DELETE
            >;
        };

        Funciones {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&Centrar      &none  &kp LC(X)  &kp LC(C)  &kp LC(V)        &kp C_BRIGHTNESS_INC    &none            &none           &kp UP_ARROW  &none       &none  &none
&cut          &none  &none      &none      &kp PRINTSCREEN  &kp C_BRI_DEC           &none            &kp LEFT_ARROW  &kp DOWN      &kp RIGHT   &none  &none
&kp LEFT_GUI  &none  &kp LC(Z)  &kp LC(Y)  &kp LC(S)        &kp C_VOL_DN            &kp C_VOLUME_UP  &kp K_PREV      &kp K_PP      &kp K_NEXT  &none  &none
                                &kp LGUI   &trans           &kp SPACE               &kp SPACE        &mo 3           &kp RALT
            >;
        };

        Simbolos {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&none  &kp EXCLAMATION  &kp AT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PRCNT    &kp EQUAL        &none      &none      &none          &none          &kp BSPC
&none  &none            &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &none        &kp EXCLAMATION  &kp HASH   &kp SLASH  &kp BACKSLASH  &kp PIPE       &kp DLLR
&none  &none            &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none        &none            &kp GRAVE  &kp CARET  &kp AT         &kp AMPERSAND  &kp TILDE
                                &kp LGUI              &mo 4                  &kp SPACE    &kp RET          &mo 3      &kp RALT
            >;
        };

        Numbs {
            display-name = "Extra 1";
            bindings = <
&none  &none  &none  &none         &none   &none        &kp KP_PLUS      &kp NUMBER_7  &kp N8    &kp N9        &kp KP_MINUS  &none
&none  &none  &none  &none         &none   &none        &kp KP_MULTIPLY  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp SLASH     &none
&none  &none  &none  &none         &none   &none        &kp NUMBER_0     &kp N1        &kp N2    &kp N3        &kp N0        &none
                     &kp LEFT_GUI  &trans  &kp SPACE    &kp SPACE        &trans        &kp RALT
            >;
        };

        extra_2 {
            display-name = "Extra 2";
            bindings = <
&kp C_RESET      &none            &none            &none            &none                              &none        &none      &none   &none     &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(269,100,52)  &none        &none      &none   &none     &none  &none  &none
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &none                              &none        &none      &none   &none     &none  &none  &none
                                                   &kp LEFT_GUI     &trans                             &kp SPACE    &kp SPACE  &trans  &kp RALT
            >;
        };

        extra_3 { status = "reserved"; };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
